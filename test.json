{
  "@fortawesome/fontawesome-common-types@0.2.28": {
    "licenses": "MIT",
    "repository": "https://github.com/FortAwesome/Font-Awesome",
    "publisher": "Dave Gandy",
    "email": "dave@fontawesome.com",
    "url": "http://twitter.com/davegandy",
    "name": "@fortawesome/fontawesome-common-types",
    "version": "0.2.28",
    "description": "The iconic font, CSS, and SVG framework",
    "copyright": "",
    "licenseText": "Font Awesome Free License\n-------------------------\n\nFont Awesome Free is free, open source, and GPL friendly. You can use it for\ncommercial projects, open source projects, or really almost whatever you want.\nFull Font Awesome Free license: https://fontawesome.com/license/free.\n\n# Icons: CC BY 4.0 License (https://creativecommons.org/licenses/by/4.0/)\nIn the Font Awesome Free download, the CC BY 4.0 license applies to all icons\npackaged as SVG and JS file types.\n\n# Fonts: SIL OFL 1.1 License (https://scripts.sil.org/OFL)\nIn the Font Awesome Free download, the SIL OFL license applies to all icons\npackaged as web and desktop font files.\n\n# Code: MIT License (https://opensource.org/licenses/MIT)\nIn the Font Awesome Free download, the MIT license applies to all non-font and\nnon-icon files.\n\n# Attribution\nAttribution is required by MIT, SIL OFL, and CC BY licenses. Downloaded Font\nAwesome Free files already contain embedded comments with sufficient\nattribution, so you shouldn't need to do anything additional when using these\nfiles normally.\n\nWe've kept attribution comments terse, so we ask that you do not actively work\nto remove them from files, especially code. They're a great way for folks to\nlearn about Font Awesome.\n\n# Brand Icons\nAll brand icons are trademarks of their respective owners. The use of these\ntrademarks does not indicate endorsement of the trademark holder by Font\nAwesome, nor vice versa. **Please do not use brand logos for any purpose except\nto represent the company, product, or service to which they refer.**",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/@fortawesome/fontawesome-common-types",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/@fortawesome/fontawesome-common-types/LICENSE.txt"
  },
  "@fortawesome/fontawesome-svg-core@1.2.28": {
    "licenses": "MIT",
    "repository": "https://github.com/FortAwesome/Font-Awesome",
    "publisher": "Dave Gandy",
    "email": "dave@fontawesome.com",
    "url": "http://twitter.com/davegandy",
    "name": "@fortawesome/fontawesome-svg-core",
    "version": "1.2.28",
    "description": "The iconic font, CSS, and SVG framework",
    "copyright": "",
    "licenseText": "Font Awesome Free License\n-------------------------\n\nFont Awesome Free is free, open source, and GPL friendly. You can use it for\ncommercial projects, open source projects, or really almost whatever you want.\nFull Font Awesome Free license: https://fontawesome.com/license/free.\n\n# Icons: CC BY 4.0 License (https://creativecommons.org/licenses/by/4.0/)\nIn the Font Awesome Free download, the CC BY 4.0 license applies to all icons\npackaged as SVG and JS file types.\n\n# Fonts: SIL OFL 1.1 License (https://scripts.sil.org/OFL)\nIn the Font Awesome Free download, the SIL OFL license applies to all icons\npackaged as web and desktop font files.\n\n# Code: MIT License (https://opensource.org/licenses/MIT)\nIn the Font Awesome Free download, the MIT license applies to all non-font and\nnon-icon files.\n\n# Attribution\nAttribution is required by MIT, SIL OFL, and CC BY licenses. Downloaded Font\nAwesome Free files already contain embedded comments with sufficient\nattribution, so you shouldn't need to do anything additional when using these\nfiles normally.\n\nWe've kept attribution comments terse, so we ask that you do not actively work\nto remove them from files, especially code. They're a great way for folks to\nlearn about Font Awesome.\n\n# Brand Icons\nAll brand icons are trademarks of their respective owners. The use of these\ntrademarks does not indicate endorsement of the trademark holder by Font\nAwesome, nor vice versa. **Please do not use brand logos for any purpose except\nto represent the company, product, or service to which they refer.**",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/@fortawesome/fontawesome-svg-core",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/@fortawesome/fontawesome-svg-core/LICENSE.txt"
  },
  "@fortawesome/free-regular-svg-icons@5.13.0": {
    "licenses": "(CC-BY-4.0 AND MIT)",
    "repository": "https://github.com/FortAwesome/Font-Awesome",
    "publisher": "Dave Gandy",
    "email": "dave@fontawesome.com",
    "url": "http://twitter.com/davegandy",
    "name": "@fortawesome/free-regular-svg-icons",
    "version": "5.13.0",
    "description": "The iconic font, CSS, and SVG framework",
    "copyright": "",
    "licenseText": "Font Awesome Free License\n-------------------------\n\nFont Awesome Free is free, open source, and GPL friendly. You can use it for\ncommercial projects, open source projects, or really almost whatever you want.\nFull Font Awesome Free license: https://fontawesome.com/license/free.\n\n# Icons: CC BY 4.0 License (https://creativecommons.org/licenses/by/4.0/)\nIn the Font Awesome Free download, the CC BY 4.0 license applies to all icons\npackaged as SVG and JS file types.\n\n# Fonts: SIL OFL 1.1 License (https://scripts.sil.org/OFL)\nIn the Font Awesome Free download, the SIL OFL license applies to all icons\npackaged as web and desktop font files.\n\n# Code: MIT License (https://opensource.org/licenses/MIT)\nIn the Font Awesome Free download, the MIT license applies to all non-font and\nnon-icon files.\n\n# Attribution\nAttribution is required by MIT, SIL OFL, and CC BY licenses. Downloaded Font\nAwesome Free files already contain embedded comments with sufficient\nattribution, so you shouldn't need to do anything additional when using these\nfiles normally.\n\nWe've kept attribution comments terse, so we ask that you do not actively work\nto remove them from files, especially code. They're a great way for folks to\nlearn about Font Awesome.\n\n# Brand Icons\nAll brand icons are trademarks of their respective owners. The use of these\ntrademarks does not indicate endorsement of the trademark holder by Font\nAwesome, nor vice versa. **Please do not use brand logos for any purpose except\nto represent the company, product, or service to which they refer.**",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/@fortawesome/free-regular-svg-icons",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/@fortawesome/free-regular-svg-icons/LICENSE.txt"
  },
  "@fortawesome/free-solid-svg-icons@5.13.0": {
    "licenses": "(CC-BY-4.0 AND MIT)",
    "repository": "https://github.com/FortAwesome/Font-Awesome",
    "publisher": "Dave Gandy",
    "email": "dave@fontawesome.com",
    "url": "http://twitter.com/davegandy",
    "name": "@fortawesome/free-solid-svg-icons",
    "version": "5.13.0",
    "description": "The iconic font, CSS, and SVG framework",
    "copyright": "",
    "licenseText": "Font Awesome Free License\n-------------------------\n\nFont Awesome Free is free, open source, and GPL friendly. You can use it for\ncommercial projects, open source projects, or really almost whatever you want.\nFull Font Awesome Free license: https://fontawesome.com/license/free.\n\n# Icons: CC BY 4.0 License (https://creativecommons.org/licenses/by/4.0/)\nIn the Font Awesome Free download, the CC BY 4.0 license applies to all icons\npackaged as SVG and JS file types.\n\n# Fonts: SIL OFL 1.1 License (https://scripts.sil.org/OFL)\nIn the Font Awesome Free download, the SIL OFL license applies to all icons\npackaged as web and desktop font files.\n\n# Code: MIT License (https://opensource.org/licenses/MIT)\nIn the Font Awesome Free download, the MIT license applies to all non-font and\nnon-icon files.\n\n# Attribution\nAttribution is required by MIT, SIL OFL, and CC BY licenses. Downloaded Font\nAwesome Free files already contain embedded comments with sufficient\nattribution, so you shouldn't need to do anything additional when using these\nfiles normally.\n\nWe've kept attribution comments terse, so we ask that you do not actively work\nto remove them from files, especially code. They're a great way for folks to\nlearn about Font Awesome.\n\n# Brand Icons\nAll brand icons are trademarks of their respective owners. The use of these\ntrademarks does not indicate endorsement of the trademark holder by Font\nAwesome, nor vice versa. **Please do not use brand logos for any purpose except\nto represent the company, product, or service to which they refer.**",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/@fortawesome/free-solid-svg-icons",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/@fortawesome/free-solid-svg-icons/LICENSE.txt"
  },
  "@fortawesome/vue-fontawesome@0.1.9": {
    "licenses": "MIT",
    "repository": "https://github.com/FortAwesome/vue-fontawesome",
    "name": "@fortawesome/vue-fontawesome",
    "version": "0.1.9",
    "description": "Official Vue component for Font Awesome 5",
    "copyright": "Copyright 2018 Fonticons, Inc.",
    "licenseText": "Copyright 2018 Fonticons, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/@fortawesome/vue-fontawesome",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/@fortawesome/vue-fontawesome/LICENSE.txt"
  },
  "axios@0.19.2": {
    "licenses": "MIT",
    "repository": "https://github.com/axios/axios",
    "publisher": "Matt Zabriskie",
    "name": "axios",
    "version": "0.19.2",
    "description": "Promise based HTTP client for the browser and node.js",
    "copyright": "Copyright (c) 2014-present Matt Zabriskie",
    "licenseText": "Copyright (c) 2014-present Matt Zabriskie\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/axios",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/axios/LICENSE"
  },
  "br-bvm-assist@1.0.0": {
    "licenses": "UNLICENSED",
    "private": true,
    "name": "br-bvm-assist",
    "version": "1.0.0",
    "description": "## Project setup ``` npm install ```",
    "copyright": "",
    "licenseText": "{\n\t\"name\": \"\",\n\t\"version\": \"\",\n\t\"description\": \"\",\n\t\"licenses\": \"\",\n\t\"copyright\": \"\",\n\t\"licenseText\": \"none\",\n\t\"licenseModified\": \"no\"\n}",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/license-checker_format.json"
  },
  "core-js@3.6.5": {
    "licenses": "MIT",
    "repository": "https://github.com/zloirock/core-js",
    "name": "core-js",
    "version": "3.6.5",
    "description": "Standard library",
    "copyright": "Copyright (c) 2014-2020 Denis Pushkarev",
    "licenseText": "Copyright (c) 2014-2020 Denis Pushkarev\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/core-js",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/core-js/LICENSE"
  },
  "debug@3.1.0": {
    "licenses": "MIT",
    "repository": "https://github.com/visionmedia/debug",
    "publisher": "TJ Holowaychuk",
    "email": "tj@vision-media.ca",
    "name": "debug",
    "version": "3.1.0",
    "description": "small debugging utility",
    "copyright": "Copyright (c) 2014 TJ Holowaychuk <tj@vision-media.ca>",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2014 TJ Holowaychuk <tj@vision-media.ca>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software \nand associated documentation files (the 'Software'), to deal in the Software without restriction, \nincluding without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, \nand/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial \nportions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT \nLIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, \nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE \nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/debug",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/debug/LICENSE"
  },
  "follow-redirects@1.5.10": {
    "licenses": "MIT",
    "repository": "https://github.com/follow-redirects/follow-redirects",
    "publisher": "Ruben Verborgh",
    "email": "ruben@verborgh.org",
    "url": "https://ruben.verborgh.org/",
    "name": "follow-redirects",
    "version": "1.5.10",
    "description": "HTTP and HTTPS modules that follow redirects.",
    "copyright": "Copyright 2014–present Olivier Lalonde <olalonde@gmail.com>, James Talmage <james@talmage.io>, Ruben Verborgh",
    "licenseText": "Copyright 2014–present Olivier Lalonde <olalonde@gmail.com>, James Talmage <james@talmage.io>, Ruben Verborgh\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/follow-redirects",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/follow-redirects/LICENSE"
  },
  "ms@2.0.0": {
    "licenses": "MIT",
    "repository": "https://github.com/zeit/ms",
    "name": "ms",
    "version": "2.0.0",
    "description": "Tiny milisecond conversion utility",
    "copyright": "Copyright (c) 2016 Zeit, Inc.",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Zeit, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/ms",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/ms/license.md"
  },
  "vue-native-websocket@2.0.14": {
    "licenses": "MIT",
    "repository": "https://github.com/nathantsoi/vue-native-websocket",
    "publisher": "Nathan Tsoi",
    "name": "vue-native-websocket",
    "version": "2.0.14",
    "description": "native websocket implemantation for vuejs and vuex",
    "copyright": "",
    "licenseText": "# vue-native-websocket &middot; [![Build Status](https://travis-ci.org/nathantsoi/vue-native-websocket.svg?branch=master)](https://travis-ci.org/nathantsoi/vue-native-websocket) [![npm version](https://img.shields.io/npm/v/vue-native-websocket.svg?style=flat)](https://www.npmjs.com/package/vue-native-websocket)\n\nnative websocket implementation for Vuejs 2 and Vuex\n\n## Install\n\n``` bash\nyarn add vue-native-websocket\n\n# or\n\nnpm install vue-native-websocket --save\n```\n\n## Usage\n\n#### Configuration\n\nAutomatic socket connection from an URL string\n\n``` js\nimport VueNativeSock from 'vue-native-websocket'\nVue.use(VueNativeSock, 'ws://localhost:9090')\n```\n\nEnable Vuex integration, where `'./store'` is your local apps store:\n\n``` js\nimport store from './store'\nVue.use(VueNativeSock, 'ws://localhost:9090', { store: store })\n```\n\nSet sub-protocol, this is optional option and default is empty string.\n\n``` js\nimport VueNativeSock from 'vue-native-websocket'\nVue.use(VueNativeSock, 'ws://localhost:9090', { protocol: 'my-protocol' })\n```\n\nOptionally enable JSON message passing:\n\n``` js\nVue.use(VueNativeSock, 'ws://localhost:9090', { format: 'json' })\n```\n\nJSON message passing with a store:\n\n``` js\nimport store from './store'\nVue.use(VueNativeSock, 'ws://localhost:9090', { store: store, format: 'json' })\n```\n\nEnable ws reconnect automatically:\n\n``` js\nVue.use(VueNativeSock, 'ws://localhost:9090', {\n  reconnection: true, // (Boolean) whether to reconnect automatically (false)\n  reconnectionAttempts: 5, // (Number) number of reconnection attempts before giving up (Infinity),\n  reconnectionDelay: 3000, // (Number) how long to initially wait before attempting a new (1000)\n})\n```\n\nManage connection manually:\n\n``` js\nVue.use(VueNativeSock, 'ws://localhost:9090', {\n  connectManually: true,\n})\nconst vm = new Vue()\n// Connect to the websocket target specified in the configuration\nvm.$connect()\n// Connect to an alternative websocket URL and Options e.g.\nvm.$connect('ws://localhost:9090/alternative/connection/', { format: 'json' })\n// do stuff with WebSockets\nvm.$disconnect()\n```\n\n#### On Vuejs instance usage\n\n``` js\nvar vm = new Vue({\n  methods: {\n    clickButton: function(val) {\n        // $socket is [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket) instance\n        this.$socket.send('some data')\n        // or with {format: 'json'} enabled\n        this.$socket.sendObj({awesome: 'data'})\n    }\n  }\n})\n```\n\n#### Dynamic socket event listeners\n\nCreate a new listener, for example:\n\n``` js\nthis.$options.sockets.onmessage = (data) => console.log(data)\n```\n\nRemove existing listener\n\n``` js\ndelete this.$options.sockets.onmessage\n```\n\n#### Vuex Store integration\n\nVuex integration works differently depending on if you've enabled a format\n\n##### Without a format enabled\n\nSocket events will commit mutations on the root store corresponding to the following events\n\n`SOCKET_ONOPEN`\n\n`SOCKET_ONCLOSE`\n\n`SOCKET_ONERROR`\n\n`SOCKET_ONMESSAGE`\n\nEach callback is passed the raw websocket event object\n\nUpdate state in the open, close and error callbacks. You can also check the socket state directly with the `this.$socket` object on the main Vue object.\n\nHandle all the data in the `SOCKET_ONMESSAGE` mutation.\n\nReconect events will commit mutations `SOCKET_RECONNECT` and `SOCKET_RECONNECT_ERROR`.\n\n``` js\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    socket: {\n      isConnected: false,\n      message: '',\n      reconnectError: false,\n    }\n  },\n  mutations:{\n    SOCKET_ONOPEN (state, event)  {\n      Vue.prototype.$socket = event.currentTarget\n      state.socket.isConnected = true\n    },\n    SOCKET_ONCLOSE (state, event)  {\n      state.socket.isConnected = false\n    },\n    SOCKET_ONERROR (state, event)  {\n      console.error(state, event)\n    },\n    // default handler called for all methods\n    SOCKET_ONMESSAGE (state, message)  {\n      state.socket.message = message\n    },\n    // mutations for reconnect methods\n    SOCKET_RECONNECT(state, count) {\n      console.info(state, count)\n    },\n    SOCKET_RECONNECT_ERROR(state) {\n      state.socket.reconnectError = true;\n    },\n  },\n  actions: {\n    sendMessage: function(context, message) {\n      .....\n      Vue.prototype.$socket.send(message)\n      .....\n    }\n  }\n})\n```\n\n##### With custom mutation names\n\n``` js\n// mutation-types.js\nconst SOCKET_ONOPEN = '✅ Socket connected!'\nconst SOCKET_ONCLOSE = '❌ Socket disconnected!'\nconst SOCKET_ONERROR = '❌ Socket Error!!!'\nconst SOCKET_ONMESSAGE = 'Websocket message received'\nconst SOCKET_RECONNECT = 'Websocket reconnected'\nconst SOCKET_RECONNECT_ERROR = 'Websocket is having issues reconnecting..'\n\nexport {\n  SOCKET_ONOPEN,\n  SOCKET_ONCLOSE,\n  SOCKET_ONERROR,\n  SOCKET_ONMESSAGE,\n  SOCKET_RECONNECT,\n  SOCKET_RECONNECT_ERROR\n}\n\n// store.js\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport {\n  SOCKET_ONOPEN,\n  SOCKET_ONCLOSE,\n  SOCKET_ONERROR,\n  SOCKET_ONMESSAGE,\n  SOCKET_RECONNECT,\n  SOCKET_RECONNECT_ERROR\n} from './mutation-types'\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    socket: {\n      isConnected: false,\n      message: '',\n      reconnectError: false,\n    }\n  },\n  mutations: {\n    [SOCKET_ONOPEN](state, event)  {\n      state.socket.isConnected = true\n    },\n    [SOCKET_ONCLOSE](state, event)  {\n      state.socket.isConnected = false\n    },\n    [SOCKET_ONERROR](state, event)  {\n      console.error(state, event)\n    },\n    // default handler called for all methods\n    [SOCKET_ONMESSAGE](state, message)  {\n      state.socket.message = message\n    },\n    // mutations for reconnect methods\n    [SOCKET_RECONNECT](state, count) {\n      console.info(state, count)\n    },\n    [SOCKET_RECONNECT_ERROR](state) {\n      state.socket.reconnectError = true;\n    }\n  }\n})\n\n// index.js\nimport store from './store'\nimport {\n  SOCKET_ONOPEN,\n  SOCKET_ONCLOSE,\n  SOCKET_ONERROR,\n  SOCKET_ONMESSAGE,\n  SOCKET_RECONNECT,\n  SOCKET_RECONNECT_ERROR\n} from './mutation-types'\n\nconst mutations = {\n  SOCKET_ONOPEN,\n  SOCKET_ONCLOSE,\n  SOCKET_ONERROR,\n  SOCKET_ONMESSAGE,\n  SOCKET_RECONNECT,\n  SOCKET_RECONNECT_ERROR\n}\n\nVue.use(VueNativeSock, 'ws://localhost:9090', {\n  store: store,\n  mutations: mutations\n})\n```\n\n\n##### With `format: 'json'` enabled\n\nAll data passed through the websocket is expected to be JSON.\n\nEach message is `JSON.parse`d if there is a data (content) response.\n\nIf there is no data, the fallback `SOCKET_ON*` mutation is called with the original event data, as above.\n\nIf there is a `.namespace` on the data, the message is sent to this `namespaced: true` store (be sure to turn this on in the store module).\n\nIf there is a `.mutation` value in the response data, the corresponding mutation is called with the name `SOCKET_[mutation value]`\n\nIf there is an `.action` value in the response data ie. `action: 'customerAdded'`, the corresponding action is called by name:\n\n``` js\nactions: {\n    customerAdded (context) {\n      console.log('action received: customerAdded')\n    }\n  }\n```\n\nUse the `.sendObj({some: data})` method on the `$socket` object to send stringified json messages.\n\n##### Custom socket event handling\n\nProvide you own custom code to handle events received via the `passToStoreHandler` option. The function you provide will be passed the following arguments:\n\n1. event name\n2. event\n3. original/default handler code function `function (eventName, event)`. This allows you to optionally do some basic preprocessing before handing the event over to the original handler.\n\nThe original passToStore code is used if no `passToStoreHandler` is configured.\n\nHere is an example of passing in a custom handler. This has the original passToStore code to give you an example of what you can do:\n\n``` js\nVue.use(VueNativeSock, 'ws://localhost:9090', {\n  passToStoreHandler: function (eventName, event) {\n    if (!eventName.startsWith('SOCKET_')) { return }\n    let method = 'commit'\n    let target = eventName.toUpperCase()\n    let msg = event\n    if (this.format === 'json' && event.data) {\n      msg = JSON.parse(event.data)\n      if (msg.mutation) {\n        target = [msg.namespace || '', msg.mutation].filter((e) => !!e).join('/')\n      } else if (msg.action) {\n        method = 'dispatch'\n        target = [msg.namespace || '', msg.action].filter((e) => !!e).join('/')\n      }\n    }\n    this.store[method](target, msg)\n  }\n})\n```\n\nHere is an example of do some preprocessing, then pass the event onto the original handler code:\n\n``` js\nVue.use(VueNativeSock, 'ws://localhost:9090', {\n  passToStoreHandler: function (eventName, event, next) {\n    event.data = event.should_have_been_named_data\n    next(eventName, event)\n  }\n})\n```\n\n## Examples\n\nTODO: post your example here!\n\n## Credits\n\nDerived from https://github.com/MetinSeylan/Vue-Socket.io",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/vue-native-websocket",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/vue-native-websocket/README.md"
  },
  "vue-notification@1.3.20": {
    "licenses": "MIT",
    "repository": "https://github.com/euvl/vue-notification",
    "publisher": "euvl",
    "name": "vue-notification",
    "version": "1.3.20",
    "description": "Vue.js Notification Library",
    "copyright": "Copyright (c) 2017 Yev Vlasenko",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Yev Vlasenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/vue-notification",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/vue-notification/LICENSE"
  },
  "vue-router@3.1.6": {
    "licenses": "MIT",
    "repository": "https://github.com/vuejs/vue-router",
    "publisher": "Evan You",
    "name": "vue-router",
    "version": "3.1.6",
    "description": "Official router for Vue.js 2",
    "copyright": "Copyright (c) 2013-present Evan You",
    "licenseText": "MIT License\n\nCopyright (c) 2013-present Evan You\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/vue-router",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/vue-router/LICENSE"
  },
  "vue@2.6.11": {
    "licenses": "MIT",
    "repository": "https://github.com/vuejs/vue",
    "publisher": "Evan You",
    "name": "vue",
    "version": "2.6.11",
    "description": "Reactive, component-oriented view layer for modern web interfaces.",
    "copyright": "Copyright (c) 2013-present, Yuxi (Evan) You",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2013-present, Yuxi (Evan) You\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/vue",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/vue/LICENSE"
  },
  "vuex@3.3.0": {
    "licenses": "MIT",
    "repository": "https://github.com/vuejs/vuex",
    "publisher": "Evan You",
    "name": "vuex",
    "version": "3.3.0",
    "description": "state management for Vue.js",
    "copyright": "Copyright (c) 2015-present Evan You",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015-present Evan You\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
    "licenseModified": "no",
    "path": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/vuex",
    "licenseFile": "/home/cpbostroem/Schreibtisch/html_sandbox/sfk-hope-one-electron/node_modules/vuex/LICENSE"
  }
}

